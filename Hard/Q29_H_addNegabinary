import java.util.*;

public class Solution {
    public int[] addNegabinary(int[] arr1, int[] arr2) {
        int i = arr1.length - 1;
        int j = arr2.length - 1;
        int carry = 0;
        List<Integer> result = new ArrayList<>();

        while (i >= 0 || j >= 0 || carry != 0) {
            if (i >= 0) carry += arr1[i--];
            if (j >= 0) carry += arr2[j--];
            result.add(0, carry & 1); // Append LSB to the result
            carry = -(carry >> 1); // Update carry for the next bit
        }

        // Convert list to array
        int[] resArr = new int[result.size()];
        for (int k = 0; k < result.size(); k++) {
            resArr[k] = result.get(k);
        }

        return resArr;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        int[] arr1 = {1, 1, 1, 1, 1};
        int[] arr2 = {1, 0, 1};
        int[] result = solution.addNegabinary(arr1, arr2);
        System.out.println(Arrays.toString(result)); // Output: [1, 0, 0, 0, 0]
    }
}
